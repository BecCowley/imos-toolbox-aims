% what
S, project                      = [mat setAIMSmetadata('[ddb Site]','project')]
S, Conventions                  = CF-1.6,IMOS-1.4
S, standard_name_vocabulary     = NetCDF Climate and Forecast (CF) Metadata Convention Standard Name Table 45
S, title                        = [ddb Site Sites Description]
S, institution                  = [mat setAIMSmetadata('[ddb Site]','institution')]
D, date_created                 = [mat now_utc]
D, date_modified                = 
S, abstract                     = [mat setAIMSmetadata('[ddb Site]','abstract')]
S, comment                      = [ddb Comment]
S, source                       = [ddb DeploymentType]
S, instrument                   = [ddb InstrumentID Instruments Make] [ddb InstrumentID Instruments Model]
S, keywords                     = [ddb InstrumentID Instruments Model], [mat cellStructCons(sample_data.dimensions, 'name', ', ')], [mat cellStructCons(sample_data.variables, 'name', ', ')]
S, keywords_vocabulary          = IMOS parameter names. See https://github.com/aodn/imos-toolbox/blob/master/IMOS/imosParameters.txt
S, references                   = [mat setAIMSmetadata('[ddb Site]','references')]
S, site_code                    = [mat strtok('[ddb Site]', '-')]
S, platform_code                = [mat strtok('[ddb Site]', '-')]
S, deployment_code              = [ddb Site]
S, featureType                  = [mat sample_data.meta.featureType]
S, cdm_data_type                = Station
S, naming_authority             = [mat setAIMSmetadata('[ddb Site]','naming_authority')]
S, metadata                     = 
S, sensorML                     = 
S, instrument_serial_number     = [mat updateIfEmpty('[ddb InstrumentID Instruments SerialNumber]', sample_data.meta.instrument_serial_no)]
N, instrument_sample_interval   = [mat sample_data.meta.instrument_sample_interval]
N, instrument_average_interval  = [mat sample_data.meta.instrument_average_interval]
N, instrument_beam_angle        = [mat sample_data.meta.beam_angle]
N, instrument_burst_interval    = [mat sample_data.meta.instrument_burst_interval]
N, instrument_burst_duration    = [mat sample_data.meta.instrument_burst_duration]
S, institution_address          = Australian Institute of Marine Science, 1526 Cape Cleveland Road, Cape Cleveland, Queensland, 4810
S, institution_postal_address   = AIMS, PMB 3, Townsville MC, Townsville 4810, Queensland, Australia

% these fields are automatically populated upon creation/export
S, file_version                 = 
S, file_version_quality_control = 
S, history                      = 
S, quality_control_log          = 

% where
N, geospatial_lat_min           = [ddb Site Sites Latitude]
N, geospatial_lat_max           = [ddb Site Sites Latitude]
N, geospatial_lon_min           = [ddb Site Sites Longitude]
N, geospatial_lon_max           = [ddb Site Sites Longitude]
N, instrument_nominal_height = [mat calculateNominalHeight([ddb Site Sites Depth], [ddb InstrumentDepth], '[ddb DepthTxt]')]
N, instrument_nominal_depth = [mat calculateNominalDepth([ddb Site Sites Depth], [ddb InstrumentDepth], '[ddb DepthTxt]')]
N, site_nominal_depth      	= 
N, site_depth_at_deployment = [ddb Site Sites Depth]

% if left empty, these fields are automatically populated upon import 
% when DEPTH variable exist (if not use depthPP pre-processing routine)
N, geospatial_vertical_min = 
N, geospatial_vertical_max = 
S, geospatial_vertical_positive = down

% when
N, local_time_zone         = 

% these fields are automatically populated upon import
D, time_deployment_start        = 
S, time_deployment_start_origin = 
D, time_deployment_end          = 
S, time_deployment_end_origin   = 
D, time_coverage_start          = 
D, time_coverage_end            = 

% who
S, data_centre                  = [mat setAIMSmetadata('[ddb Site]','data_centre')]
S, data_centre_email            = [mat setAIMSmetadata('[ddb Site]','data_centre_email')]
S, author_email                 = adc@aims.gov.au
S, author                       = Australian Institute of Marine Science
S, principal_investigator       = [mat setAIMSmetadata('[ddb Site]','principal_investigator')]
S, principal_investigator_email = [mat setAIMSmetadata('[ddb Site]','principal_investigator_email')]
S, institution_references       = [mat setAIMSmetadata('[ddb Site]','institution_references')]

% how
S, lineage                 = 
S, citation                = [mat setAIMSmetadata('[ddb Site]','citation')]
S, acknowledgement         = [mat setAIMSmetadata('[ddb Site]','acknowledgement')]
S, disclaimer              = [mat setAIMSmetadata('[ddb Site]','disclaimer')]
S, license                 = http://creativecommons.org/licenses/by/4.0/
